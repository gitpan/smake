##
##  smk.stddef -- Standard Defines for GNU autoconf based Makefiles
##  Copyright (c) 1997 Ralf S. Engelschall, All Rights Reserved. 
##

.pri -10

#
#   define some essential Make variables
#
@SET_MAKE@
top_srcdir      = @top_srcdir@
srcdir          = @srcdir@
VPATH           = @srcdir@

#   set $(SHELL) allways to the bourne shell
#   to be independ of the current user environment
SHELL           = /bin/sh

#
#   set the paths and flags for usually used tools
#
CPP             = @CPP@
CC              = @CC@
CFLAGS          = @CFLAGS@
CCINCL          = -I@srcdir@
ACDEFS          = -I@top_srcdir@/config @DEFS@
ANSI_CC         = @ANSI_CC@
AR              = @AR@
LEX             = @LEX@
LEXLIB          = @LEXLIB@
YACC            = @YACC@
INSTALL         = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA    = @INSTALL_DATA@

#
#   set target systems parameters
#
target          = @target@
arch            = @arch@
vendor          = @vendor@
os              = @os@

#
#   set paths to the installation location
#
prefix          = @prefix@
exec_prefix     = @exec_prefix@
bindir          = @bindir@
libdir          = @libdir@
datadir         = @datadir@
statdir         = @statdir@
includedir      = @includedir@
oldincludedir   = @oldincludedir@
mandir          = @mandir@
man1dir         = @man1dir@
man2dir         = @man2dir@
man3dir         = @man3dir@
man4dir         = @man4dir@
man5dir         = @man5dir@
man6dir         = @man6dir@
man7dir         = @man7dir@
man8dir         = @man8dir@
manext          = @manext@
man1ext         = @man1ext@
man2ext         = @man2ext@
man3ext         = @man3ext@
man4ext         = @man4ext@
man5ext         = @man5ext@
man6ext         = @man6ext@
man7ext         = @man7ext@
man8ext         = @man8ext@
pkgdir          = @pkgdir@
infodir         = @infodir@
xaddir          = @xaddir@
tmpdir          = @tmpdir@

#   Correct subdir movement calling facility
#   i.e. it is incorrect to write the following rules:
#   
#       target1: source1a source1b _target1
#               command1
#       target2: target1 source2a source2b _target2
#               command2
#
#   because if you run "make target2" this will step into subdirs for
#   target1 _AND_ later again for target2!
#
#   Correct behavior is: do target1, then do target2 and then move
#   to subdirs for target2, because inside the subdirs, target2
#   allready calls target1 locally!
#
#   To get this behavior and to be able to run into the subdirs at
#   the first OR the last action for a target you can now do:
#
#       target1: source1a source1b
#               command1
#               $(MoveToSubDirs)
#       target2: source2a source2b
#               @PreTargets=target1; $(RunPreTargets)
#               command2
#               $(MoveToSubDirs)
_GotoSubDir = yes
RunPreTargets = \
    if [ "x$$PreTargets" != x ]; then \
        $(MAKE) $(MFLAGS) _steppath="$(_steppath)" _GotoSubDir=no $$PreTargets; \
    fi
MoveToSubDirs = \
    if [ $(_GotoSubDir) = yes ]; then \
        $(MAKE) $(MFLAGS) _steppath="$(_steppath)" _$@; \
    fi

#
#   predefine some of the standard defines
#
SRCS = 
HDRS =
OBJS =
MISC = 

TARGETS = $(OBJS)

.pri +10

